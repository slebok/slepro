program : { function } * main ;
function : funsig fundef ;
funsig : name '::' type ;
fundef : name { name }* '=' expr ;
type : simpletype { '->' simpletype }* ;
main : 'main' '=' 'print' '$' expr ;

[inttype] simpletype :  'Int' ;
[booltype] simpletype :  'Bool' ;

[op] expr : '(' op ')' subexpr subexpr ;
[subexpr] expr : subexpr ;
[apply] expr : name { subexpr }+ ;
[intconst] subexpr : int ;
[brackets] subexpr : '(' expr ')' ;
[if] subexpr : 'if' expr 'then' expr 'else' expr ;
[name] subexpr : name ;

[add] op : '+' ;
[sub] op : '-' ;
[mult] op : '*' ;
[eq] op : '==' ;
