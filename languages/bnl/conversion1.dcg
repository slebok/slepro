:- use_module(library(clpr)).

number_(Val0) -->
  bits_(Pos1, Len1, Val1),
  rest_(Val2),
  { { Pos1 =:= Len1 - 1 } },
  { { Val0 =:= Val1 + Val2 } }.

bits_(Pos, Len, Val) -->
  bit_(Pos, Val),
  { { Len =:= 1 } }.

bits_(Pos0, Len0, Val0) -->
  bit_(Pos0, Val1),
  bits_(Pos1, Len1, Val2),
  { { Pos1 =:= Pos0 - 1 } },
  { { Len0 =:= Len1 + 1 } },
  { { Val0 =:= Val1 + Val2 } }.

bit_(_Pos, Val) -->
  ['0'],
  { { Val =:= 0 } }.

bit_(Pos, Val) -->
  ['1'],
  { { Val =:= 2 ^ Pos } }.

rest_(Val) -->
  { { Val =:= 0 } }.

rest_(Val) -->
  ['.'],
  bits_(Pos, _Len, Val),
  { { Pos =:= -1 } }.
