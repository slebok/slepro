[

  macro(eglSyntax(fsml)),
  macro(eslSyntax(fsml)),
  macro(parse('sample.fsml')),
  language(fsml(ok(term))),
  membership(fsml(ok(term)), okFsm, []),
  elementOf('sample.term', fsml(ok(term))),
  elementOf('sample.input', term),
  elementOf('sample.output', term),
  mapsTo(simulateFsm, ['sample.term', 'sample.input'], ['sample.output']),
  mapsTo(acceptFsm, ['sample.term', 'sample.input'], []),
  mapsTo(statesOfFsm, ['sample.term'], ['java/State.java']),
  mapsTo(inputsOfFsm, ['sample.term'], ['java/Input.java']),
  mapsTo(actionsOfFsm, ['sample.term'], ['java/Action.java']),
  mapsTo(stepperOfFsm, ['sample.term'], ['java/Stepper.java'])

].
